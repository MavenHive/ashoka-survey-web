<script type="text/javascript" src="https://www.google.com/jsapi"></script>
<script type="text/javascript">
  google.load("visualization", "1", {packages:["corechart"]});
  google.setOnLoadCallback(drawChart);
    var chart, data, params={};


  function dateReportData(report_data_json) {
    var report_data = _(JSON.parse(report_data_json)).rest()

    _(report_data).each(function(dateString){
      dateString[0] = new Date(dateString[0]);
    });

    return report_data;
  }

  function drawChart() {
    <% @survey.questions_for_reports.each do |question| %>
      <% if question.is_a? QuestionWithOptions %>
        data = google.visualization.arrayToDataTable(JSON.parse('<%= @survey.report_data_for(question) %>'))
        chart = new google.visualization.PieChart(document.getElementById('chart_div_<%= question.id %>'));
        params['title'] = "<%= question.decorate.content_with_answer_count %>";
        chart.draw(data, params);
      <% elsif question.type == 'DateQuestion'%>
        data = new google.visualization.DataTable();
        chart = new google.visualization.ScatterChart(document.getElementById('chart_div_<%= question.id %>'));

        data.addColumn('date', 'Value');
        data.addColumn('number', 'Answer / Count');

        var report_data = dateReportData('<%= @survey.report_data_for(question) %>')

        data.addRows(report_data)
        params = {
          vAxis: {'title': 'Count'},
          hAxis: {'title': 'Answer'},
        }

        params['title'] = "<%= question.decorate.content_with_answer_count %>";
        chart.draw(data, params);
      <% elsif question.type == 'NumericQuestion' %>
        chart = new google.visualization.ScatterChart(document.getElementById('chart_div_<%= question.id %>'));
        data = google.visualization.arrayToDataTable(JSON.parse('<%= @survey.report_data_for(question) %>'))
        params = {
          vAxis: {'title': 'Count', minValue: 0, maxValue: <%= question.answers.count %> },
          hAxis: {'title': 'Answer', minValue: <%= question.min_value_for_report %> , maxValue: <%= question.max_value_for_report %>},
        }
        params['title'] = "<%= question.decorate.content_with_answer_count %>";
        chart.draw(data, params);
      <% end %>
    <% end %>
  }
</script>
<header>
  <%= link_to icon_for('icon-table', t('.download_excel')), 'javascript:void(0);', :class => 'download_excel' if @complete_responses.present? && can?(:generate_excel, @survey) %>
  <h2><%= t '.reports' %></h2>
</header>
<div id="dialog" title="<%= t('responses.excel.excel_dialog_title') %>">
  <p><%= t('responses.excel.excel_downloading_message') %></p>
</div>
<div class="reports">
  <%= render "layouts/status_bar", :status => "analyze" %>
  <% @survey.questions_for_reports.each do |question| %>
    <div id="chart_div_<%= question.id %>"></div>
  <% end %>
  <div id="location_map">
    <p><%= t('.location') %></p>
    <%= gmaps4rails(@markers) %>
  </div>
</div>
<script>
  $(document).ready(function() {
    new ExcelDownloader(<%= @survey.id %>)
  });
</script>
